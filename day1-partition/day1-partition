/**
 * Partition: Write code to partition a linked list around a value x, such that all nodes less than x come 
 * before equal to x. If x is contained within the list, the values of x only need to be after the elements 
 * less than x (see below). The partition element x can appear anywhere in the "right partition"; it does not 
 * need to appear between the left and right partitions.
 */

 //TODO: write test cases
 //TODO: implement algorithm
 //TODO: test 

/**
 * Definition for singly-linked list.
 */
public class ListNode {
    int val;
    ListNode next;
    ListNode() {}
    ListNode(int val) { this.val = val; }
    ListNode(int val, ListNode next) { this.val = val; this.next = next; }
}
 
class Solution {
}

public static void main(String[] args) {
}